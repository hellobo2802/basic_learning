# 变量
"""
1. 变量需要先定义，后引用
2. python 不需要定义变量时说明类型，直接写变量名字即可
3. 内存（变量）用完后，一定要关闭！避免内存溢出
4. python: 内存管理 -> 垃圾回收机制：内存被占用后不被引用（引用计数为0）的内存地址称为垃圾
5. del+变量名：移除变量，解除绑定关系
6. 变量三大组成部分。变量名（用于搜索内存地址，命名规则要求英文纯小写下划线+见名知义）、赋值符号=（用于构建链接）、变量值（表示事物状态，id为内存映射，type）
7. is与==区别？  is用于判断变量id是否一致，==用于判断变量值是否一致。在赋值符号=右侧为新值‘数字、字符串等’时会新开内存地址，而赋值符号=右侧为变量名时，只建立地址链接，id不变
8. 小整数池。python内存优化-->>常用值-5-256等内存地址被固定，提高效率。这些值被用到时不再创建新地址，不再垃圾回收。
"""

name = "刘少博" # 定义变量
print(name) # 引用变量

age = 22 # 内存中开设一个'age'的空间，值赋22
print(age)
# aaa

# 4 增加引用计数
a = 100
b = a # b指向a的内存地址，内存地址100的引用计数+1
c = a # c指向a的内存地址，内存地址100的引用计数+1
# 5 减少引用计数
del a # 移除变量，解除a与100的绑定关系
print(b) # 直接指向100，a只作为中间工具！

del b
c = 123 # c与100解除绑定，与新开内存123绑定
print(c) # 此时，内存地址为100的地址，引用计数为0，系统自动扫描清除该内存，这就是垃圾回收机制。


# 6 名字+()：运行该功能
id(name) # 获取变量的内存地址映射
id(age)
type(name) # 获取变量类型
type(age)
print(id(age))
print(type(name)) #str 字符串类型

# 7 is与==区别
name1 = '刘少博'
name2 = '刘少博'
print(id(name1), id(name2)) # 查看内存地址变量ID是否相同（VSCode优化，使其地址相同，其实不同！）
print(name1 is name2)  # 查看内存地址变量ID是否相同！其实地址不同
print(name1 == name2) # 查看变量值是都相同

# 8 在python解释器端口运行！VSCode会适当扩大小整数池的范围，以及内存优化等
a = 18
b = 18
c = 9 + 9
print(id(a),id(b),id(c)) # id一致
a = 257
b = 257
c = 256 + 1
print(id(a),id(b),id(c)) # id不一致